---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: bootstraps.bootstrap.plural.sh
spec:
  group: bootstrap.plural.sh
  names:
    kind: Bootstrap
    listKind: BootstrapList
    plural: bootstraps
    singular: bootstrap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Application ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cloudSpec:
                properties:
                  aws:
                    properties:
                      accessKeyIdRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      addons:
                        items:
                          description: Addon represents a EKS addon.
                          properties:
                            name:
                              description: Name is the name of the addon
                              minLength: 2
                              type: string
                            serviceAccountRoleARN:
                              description: ServiceAccountRoleArn is the ARN of an
                                IAM role to bind to the addons service account
                              type: string
                            version:
                              description: Version is the version of the addon to
                                use
                              type: string
                          required:
                          - name
                          - version
                          type: object
                        type: array
                      fetchConfigUrl:
                        type: string
                      instanceType:
                        type: string
                      machinePoolReplicas:
                        format: int32
                        type: integer
                      region:
                        type: string
                      secretAccessKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      serviceAccounts:
                        description: ServiceAccounts specifies service accounts
                        items:
                          properties:
                            attachPolicy:
                              description: AttachPolicy holds a policy document to
                                attach to this service account
                              type: string
                            attachPolicyARNs:
                              description: list of ARNs of the IAM policies to attach
                              items:
                                type: string
                              type: array
                            attachRoleARN:
                              description: ARN of the role to attach to the service
                                account
                              type: string
                            metadata:
                              description: ClusterIAMMeta holds information we can
                                use to create ObjectMeta for service accounts
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            permissionsBoundary:
                              description: ARN of the permissions boundary to associate
                                with the service account
                              type: string
                            roleName:
                              description: Specific role name instead of the Cloudformation-generated
                                role name
                              type: string
                            roleOnly:
                              description: Specify if only the IAM Service Account
                                role should be created without creating/annotating
                                the service account
                              type: boolean
                            tags:
                              additionalProperties:
                                type: string
                              description: AWS tags for the service account
                              type: object
                            wellKnownPolicies:
                              description: WellKnownPolicies for attaching common
                                IAM policies
                              properties:
                                autoScaler:
                                  description: AutoScaler adds policies for cluster-autoscaler.
                                    See [autoscaler AWS docs](https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html).
                                  type: boolean
                                awsLoadBalancerController:
                                  description: AWSLoadBalancerController adds policies
                                    for using the aws-load-balancer-controller. See
                                    [Load Balancer docs](https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html).
                                  type: boolean
                                certManager:
                                  description: CertManager adds cert-manager policies.
                                    See [cert-manager docs](https://cert-manager.io/docs/configuration/acme/dns01/route53).
                                  type: boolean
                                ebsCSIController:
                                  description: EBSCSIController adds policies for
                                    using the ebs-csi-controller. See [aws-ebs-csi-driver
                                    docs](https://github.com/kubernetes-sigs/aws-ebs-csi-driver#set-up-driver-permission).
                                  type: boolean
                                efsCSIController:
                                  description: EFSCSIController adds policies for
                                    using the efs-csi-controller. See [aws-efs-csi-driver
                                    docs](https://aws.amazon.com/blogs/containers/introducing-efs-csi-dynamic-provisioning).
                                  type: boolean
                                externalDNS:
                                  description: ExternalDNS adds external-dns policies
                                    for Amazon Route 53. See [external-dns docs](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md).
                                  type: boolean
                                imageBuilder:
                                  description: ImageBuilder allows for full ECR (Elastic
                                    Container Registry) access.
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      sessionTokenRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      version:
                        type: string
                    required:
                    - accessKeyIdRef
                    - instanceType
                    - machinePoolReplicas
                    - region
                    - secretAccessKeyRef
                    - sessionTokenRef
                    type: object
                  azure:
                    properties:
                      clientIDRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      clientSecretRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      clusterIdentity:
                        description: AzureClusterIdentitySpec defines the parameters
                          that are used to create an AzureIdentity.
                        properties:
                          allowedNamespaces:
                            description: AllowedNamespaces is used to identify the
                              namespaces the clusters are allowed to use the identity
                              from. Namespaces can be selected either using an array
                              of namespaces or with label selector. An empty allowedNamespaces
                              object indicates that AzureClusters can use this identity
                              from any namespace. If this object is nil, no namespaces
                              will be allowed (default behaviour, if this field is
                              not provided) A namespace should be either in the NamespaceList
                              or match with Selector to use the identity.
                            nullable: true
                            properties:
                              list:
                                description: A nil or empty list indicates that AzureCluster
                                  cannot use the identity from any namespace.
                                items:
                                  type: string
                                nullable: true
                                type: array
                              selector:
                                description: "Selector is a selector of namespaces
                                  that AzureCluster can use this Identity from. This
                                  is a standard Kubernetes LabelSelector, a label
                                  query over a set of resources. The result of matchLabels
                                  and matchExpressions are ANDed. \n A nil or empty
                                  selector indicates that AzureCluster cannot use
                                  this AzureClusterIdentity from any namespace."
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: A label selector requirement is
                                        a selector that contains values, a key, and
                                        an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's
                                            relationship to a set of values. Valid
                                            operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string
                                            values. If the operator is In or NotIn,
                                            the values array must be non-empty. If
                                            the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array
                                            is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value}
                                      pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions,
                                      whose key field is "key", the operator is "In",
                                      and the values array contains only "value".
                                      The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          clientID:
                            description: ClientID is the service principal client
                              ID. Both User Assigned MSI and SP can use this field.
                            type: string
                          clientSecret:
                            description: ClientSecret is a secret reference which
                              should contain either a Service Principal password or
                              certificate secret.
                            properties:
                              name:
                                description: name is unique within a namespace to
                                  reference a secret resource.
                                type: string
                              namespace:
                                description: namespace defines the space within which
                                  the secret name must be unique.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceID:
                            description: ResourceID is the Azure resource ID for the
                              User Assigned MSI resource. Only applicable when type
                              is UserAssignedMSI.
                            type: string
                          tenantID:
                            description: TenantID is the service principal primary
                              tenant id.
                            type: string
                          type:
                            description: Type is the type of Azure Identity used.
                              ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI
                              or ManualServicePrincipal.
                            enum:
                            - ServicePrincipal
                            - UserAssignedMSI
                            - ManualServicePrincipal
                            - ServicePrincipalCertificate
                            type: string
                        required:
                        - clientID
                        - tenantID
                        - type
                        type: object
                      controlPlane:
                        description: AzureManagedControlPlaneSpec defines the desired
                          state of AzureManagedControlPlane.
                        properties:
                          aadProfile:
                            description: AadProfile is Azure Active Directory configuration
                              to integrate with AKS for aad authentication.
                            properties:
                              adminGroupObjectIDs:
                                description: AdminGroupObjectIDs - AAD group object
                                  IDs that will have admin role of the cluster.
                                items:
                                  type: string
                                type: array
                              managed:
                                description: Managed - Whether to enable managed AAD.
                                type: boolean
                            required:
                            - adminGroupObjectIDs
                            - managed
                            type: object
                          additionalTags:
                            additionalProperties:
                              type: string
                            description: AdditionalTags is an optional set of tags
                              to add to Azure resources managed by the Azure provider,
                              in addition to the ones added by default.
                            type: object
                          addonProfiles:
                            description: AddonProfiles are the profiles of managed
                              cluster add-on.
                            items:
                              description: AddonProfile represents a managed cluster
                                add-on.
                              properties:
                                config:
                                  additionalProperties:
                                    type: string
                                  description: Config - Key-value pairs for configuring
                                    the add-on.
                                  type: object
                                enabled:
                                  description: Enabled - Whether the add-on is enabled
                                    or not.
                                  type: boolean
                                name:
                                  description: Name - The name of the managed cluster
                                    add-on.
                                  type: string
                              required:
                              - enabled
                              - name
                              type: object
                            type: array
                          apiServerAccessProfile:
                            description: APIServerAccessProfile is the access profile
                              for AKS API server.
                            properties:
                              authorizedIPRanges:
                                description: AuthorizedIPRanges - Authorized IP Ranges
                                  to kubernetes API server.
                                items:
                                  type: string
                                type: array
                              enablePrivateCluster:
                                description: EnablePrivateCluster - Whether to create
                                  the cluster as a private cluster or not.
                                type: boolean
                              enablePrivateClusterPublicFQDN:
                                description: EnablePrivateClusterPublicFQDN - Whether
                                  to create additional public FQDN for private cluster
                                  or not.
                                type: boolean
                              privateDNSZone:
                                description: PrivateDNSZone - Private dns zone mode
                                  for private cluster.
                                enum:
                                - System
                                - None
                                type: string
                            type: object
                          autoscalerProfile:
                            description: AutoscalerProfile is the parameters to be
                              applied to the cluster-autoscaler when enabled
                            properties:
                              balanceSimilarNodeGroups:
                                description: BalanceSimilarNodeGroups - Valid values
                                  are 'true' and 'false'. The default is false.
                                enum:
                                - "true"
                                - "false"
                                type: string
                              expander:
                                description: Expander - If not specified, the default
                                  is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
                                  for more information.
                                enum:
                                - least-waste
                                - most-pods
                                - priority
                                - random
                                type: string
                              maxEmptyBulkDelete:
                                description: MaxEmptyBulkDelete - The default is 10.
                                type: string
                              maxGracefulTerminationSec:
                                description: MaxGracefulTerminationSec - The default
                                  is 600.
                                pattern: ^(\d+)$
                                type: string
                              maxNodeProvisionTime:
                                description: MaxNodeProvisionTime - The default is
                                  '15m'. Values must be an integer followed by an
                                  'm'. No unit of time other than minutes (m) is supported.
                                pattern: ^(\d+)m$
                                type: string
                              maxTotalUnreadyPercentage:
                                description: MaxTotalUnreadyPercentage - The default
                                  is 45. The maximum is 100 and the minimum is 0.
                                maxLength: 3
                                minLength: 1
                                pattern: ^(\d+)$
                                type: string
                              newPodScaleUpDelay:
                                description: NewPodScaleUpDelay - For scenarios like
                                  burst/batch scale where you don't want CA to act
                                  before the kubernetes scheduler could schedule all
                                  the pods, you can tell CA to ignore unscheduled
                                  pods before they're a certain age. The default is
                                  '0s'. Values must be an integer followed by a unit
                                  ('s' for seconds, 'm' for minutes, 'h' for hours,
                                  etc).
                                type: string
                              okTotalUnreadyCount:
                                description: OkTotalUnreadyCount - This must be an
                                  integer. The default is 3.
                                pattern: ^(\d+)$
                                type: string
                              scaleDownDelayAfterAdd:
                                description: ScaleDownDelayAfterAdd - The default
                                  is '10m'. Values must be an integer followed by
                                  an 'm'. No unit of time other than minutes (m) is
                                  supported.
                                pattern: ^(\d+)m$
                                type: string
                              scaleDownDelayAfterDelete:
                                description: ScaleDownDelayAfterDelete - The default
                                  is the scan-interval. Values must be an integer
                                  followed by an 's'. No unit of time other than seconds
                                  (s) is supported.
                                pattern: ^(\d+)s$
                                type: string
                              scaleDownDelayAfterFailure:
                                description: ScaleDownDelayAfterFailure - The default
                                  is '3m'. Values must be an integer followed by an
                                  'm'. No unit of time other than minutes (m) is supported.
                                pattern: ^(\d+)m$
                                type: string
                              scaleDownUnneededTime:
                                description: ScaleDownUnneededTime - The default is
                                  '10m'. Values must be an integer followed by an
                                  'm'. No unit of time other than minutes (m) is supported.
                                pattern: ^(\d+)m$
                                type: string
                              scaleDownUnreadyTime:
                                description: ScaleDownUnreadyTime - The default is
                                  '20m'. Values must be an integer followed by an
                                  'm'. No unit of time other than minutes (m) is supported.
                                pattern: ^(\d+)m$
                                type: string
                              scaleDownUtilizationThreshold:
                                description: ScaleDownUtilizationThreshold - The default
                                  is '0.5'.
                                type: string
                              scanInterval:
                                description: ScanInterval - How often cluster is reevaluated
                                  for scale up or down. The default is '10s'.
                                pattern: ^(\d+)s$
                                type: string
                              skipNodesWithLocalStorage:
                                description: SkipNodesWithLocalStorage - The default
                                  is false.
                                enum:
                                - "true"
                                - "false"
                                type: string
                              skipNodesWithSystemPods:
                                description: SkipNodesWithSystemPods - The default
                                  is true.
                                enum:
                                - "true"
                                - "false"
                                type: string
                            type: object
                          controlPlaneEndpoint:
                            description: ControlPlaneEndpoint represents the endpoint
                              used to communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                          dnsServiceIP:
                            description: DNSServiceIP is an IP address assigned to
                              the Kubernetes DNS service. It must be within the Kubernetes
                              service address range specified in serviceCidr.
                            type: string
                          identityRef:
                            description: IdentityRef is a reference to a AzureClusterIdentity
                              to be used when reconciling this cluster
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          loadBalancerProfile:
                            description: LoadBalancerProfile is the profile of the
                              cluster load balancer.
                            properties:
                              allocatedOutboundPorts:
                                description: AllocatedOutboundPorts - Desired number
                                  of allocated SNAT ports per VM. Allowed values must
                                  be in the range of 0 to 64000 (inclusive). The default
                                  value is 0 which results in Azure dynamically allocating
                                  ports.
                                format: int32
                                type: integer
                              idleTimeoutInMinutes:
                                description: IdleTimeoutInMinutes - Desired outbound
                                  flow idle timeout in minutes. Allowed values must
                                  be in the range of 4 to 120 (inclusive). The default
                                  value is 30 minutes.
                                format: int32
                                type: integer
                              managedOutboundIPs:
                                description: ManagedOutboundIPs - Desired managed
                                  outbound IPs for the cluster load balancer.
                                format: int32
                                type: integer
                              outboundIPPrefixes:
                                description: OutboundIPPrefixes - Desired outbound
                                  IP Prefix resources for the cluster load balancer.
                                items:
                                  type: string
                                type: array
                              outboundIPs:
                                description: OutboundIPs - Desired outbound IP resources
                                  for the cluster load balancer.
                                items:
                                  type: string
                                type: array
                            type: object
                          loadBalancerSKU:
                            description: LoadBalancerSKU is the SKU of the loadBalancer
                              to be provisioned.
                            enum:
                            - Basic
                            - Standard
                            type: string
                          location:
                            description: 'Location is a string matching one of the
                              canonical Azure region names. Examples: "westus2", "eastus".'
                            type: string
                          networkPlugin:
                            description: NetworkPlugin used for building Kubernetes
                              network.
                            enum:
                            - azure
                            - kubenet
                            type: string
                          networkPolicy:
                            description: NetworkPolicy used for building Kubernetes
                              network.
                            enum:
                            - azure
                            - calico
                            type: string
                          nodeResourceGroupName:
                            description: NodeResourceGroupName is the name of the
                              resource group containing cluster IaaS resources. Will
                              be populated to default in webhook.
                            type: string
                          outboundType:
                            description: Outbound configuration used by Nodes.
                            enum:
                            - loadBalancer
                            - managedNATGateway
                            - userAssignedNATGateway
                            - userDefinedRouting
                            type: string
                          resourceGroupName:
                            description: ResourceGroupName is the name of the Azure
                              resource group for this AKS Cluster.
                            type: string
                          sku:
                            description: SKU is the SKU of the AKS to be provisioned.
                            properties:
                              tier:
                                description: Tier - Tier of an AKS cluster.
                                enum:
                                - Free
                                - Paid
                                type: string
                            required:
                            - tier
                            type: object
                          sshPublicKey:
                            description: SSHPublicKey is a string literal containing
                              an ssh public key base64 encoded.
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the GUID of the Azure subscription
                              to hold this cluster.
                            type: string
                          version:
                            description: Version defines the desired Kubernetes version.
                            minLength: 2
                            type: string
                          virtualNetwork:
                            description: VirtualNetwork describes the vnet for the
                              AKS cluster. Will be created if it does not exist.
                            properties:
                              cidrBlock:
                                type: string
                              name:
                                type: string
                              resourceGroup:
                                description: ResourceGroup is the name of the Azure
                                  resource group for the VNet and Subnet.
                                type: string
                              subnet:
                                description: ManagedControlPlaneSubnet describes a
                                  subnet for an AKS cluster.
                                properties:
                                  cidrBlock:
                                    type: string
                                  name:
                                    type: string
                                  privateEndpoints:
                                    description: PrivateEndpoints is a slice of Virtual
                                      Network private endpoints to create for the
                                      subnets.
                                    items:
                                      description: PrivateEndpointSpec configures
                                        an Azure Private Endpoint.
                                      properties:
                                        applicationSecurityGroups:
                                          description: ApplicationSecurityGroups specifies
                                            the Application security group in which
                                            the private endpoint IP configuration
                                            is included.
                                          items:
                                            type: string
                                          type: array
                                        customNetworkInterfaceName:
                                          description: CustomNetworkInterfaceName
                                            specifies the network interface name associated
                                            with the private endpoint.
                                          type: string
                                        location:
                                          description: Location specifies the region
                                            to create the private endpoint.
                                          type: string
                                        manualApproval:
                                          description: ManualApproval specifies if
                                            the connection approval needs to be done
                                            manually or not. Set it true when the
                                            network admin does not have access to
                                            approve connections to the remote resource.
                                            Defaults to false.
                                          type: boolean
                                        name:
                                          description: Name specifies the name of
                                            the private endpoint.
                                          type: string
                                        privateIPAddresses:
                                          description: PrivateIPAddresses specifies
                                            the IP addresses for the network interface
                                            associated with the private endpoint.
                                            They have to be part of the subnet where
                                            the private endpoint is linked.
                                          items:
                                            type: string
                                          type: array
                                        privateLinkServiceConnections:
                                          description: PrivateLinkServiceConnections
                                            specifies Private Link Service Connections
                                            of the private endpoint.
                                          items:
                                            description: PrivateLinkServiceConnection
                                              defines the specification for a private
                                              link service connection associated with
                                              a private endpoint.
                                            properties:
                                              groupIDs:
                                                description: GroupIDs specifies the
                                                  ID(s) of the group(s) obtained from
                                                  the remote resource that this private
                                                  endpoint should connect to.
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: Name specifies the name
                                                  of the private link service.
                                                type: string
                                              privateLinkServiceID:
                                                description: PrivateLinkServiceID
                                                  specifies the resource ID of the
                                                  private link service.
                                                type: string
                                              requestMessage:
                                                description: RequestMessage specifies
                                                  a message passed to the owner of
                                                  the remote resource with the private
                                                  endpoint connection request.
                                                maxLength: 140
                                                type: string
                                            type: object
                                          type: array
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  serviceEndpoints:
                                    description: ServiceEndpoints is a slice of Virtual
                                      Network service endpoints to enable for the
                                      subnets.
                                    items:
                                      description: ServiceEndpointSpec configures
                                        an Azure Service Endpoint.
                                      properties:
                                        locations:
                                          items:
                                            type: string
                                          type: array
                                        service:
                                          type: string
                                      required:
                                      - locations
                                      - service
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - service
                                    x-kubernetes-list-type: map
                                required:
                                - cidrBlock
                                - name
                                type: object
                            required:
                            - cidrBlock
                            - name
                            type: object
                        required:
                        - location
                        - resourceGroupName
                        - sshPublicKey
                        - version
                        type: object
                      fetchConfigUrl:
                        type: string
                      machinePool:
                        properties:
                          mode:
                            type: string
                          sku:
                            type: string
                        required:
                        - mode
                        - sku
                        type: object
                      managedCluster:
                        description: AzureManagedClusterSpec defines the desired state
                          of AzureManagedCluster.
                        properties:
                          controlPlaneEndpoint:
                            description: ControlPlaneEndpoint represents the endpoint
                              used to communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                        type: object
                      tenantIDRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      version:
                        type: string
                    required:
                    - clientIDRef
                    - clientSecretRef
                    - clusterIdentity
                    - controlPlane
                    - machinePool
                    - managedCluster
                    - tenantIDRef
                    type: object
                  gcp:
                    properties:
                      controlPlane:
                        description: GCPManagedControlPlaneSpec defines the desired
                          state of GCPManagedControlPlane.
                        properties:
                          clusterName:
                            description: ClusterName allows you to specify the name
                              of the GKE cluster. If you don't specify a name then
                              a default name will be created based on the namespace
                              and name of the managed control plane.
                            type: string
                          controlPlaneVersion:
                            description: ControlPlaneVersion represents the control
                              plane version of the GKE cluster. If not specified,
                              the default version currently supported by GKE will
                              be used.
                            type: string
                          enableAutopilot:
                            description: EnableAutopilot indicates whether to enable
                              autopilot for this GKE cluster.
                            type: boolean
                          endpoint:
                            description: Endpoint represents the endpoint used to
                              communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                          location:
                            description: Location represents the location (region
                              or zone) in which the GKE cluster will be created.
                            type: string
                          project:
                            description: Project is the name of the project to deploy
                              the cluster to.
                            type: string
                          releaseChannel:
                            description: ReleaseChannel represents the release channel
                              of the GKE cluster.
                            enum:
                            - rapid
                            - regular
                            - stable
                            type: string
                        required:
                        - enableAutopilot
                        - location
                        - project
                        type: object
                      credentialsRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      fetchConfigUrl:
                        type: string
                      machinePool:
                        properties:
                          replicas:
                            format: int32
                            type: integer
                        required:
                        - replicas
                        type: object
                      managedCluster:
                        description: GCPManagedClusterSpec defines the desired state
                          of GCPManagedCluster.
                        properties:
                          additionalLabels:
                            additionalProperties:
                              type: string
                            description: AdditionalLabels is an optional set of tags
                              to add to GCP resources managed by the GCP provider,
                              in addition to the ones added by default.
                            type: object
                          controlPlaneEndpoint:
                            description: ControlPlaneEndpoint represents the endpoint
                              used to communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                          credentialsRef:
                            description: CredentialsRef is a reference to a Secret
                              that contains the credentials to use for provisioning
                              this cluster. If not supplied then the credentials of
                              the controller will be used.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          network:
                            description: NetworkSpec encapsulates all things related
                              to the GCP network.
                            properties:
                              autoCreateSubnetworks:
                                description: "AutoCreateSubnetworks: When set to true,
                                  the VPC network is created in \"auto\" mode. When
                                  set to false, the VPC network is created in \"custom\"
                                  mode. \n An auto mode VPC network starts with one
                                  subnet per region. Each subnet has a predetermined
                                  range as described in Auto mode VPC network IP ranges.
                                  \n Defaults to true."
                                type: boolean
                              loadBalancerBackendPort:
                                description: Allow for configuration of load balancer
                                  backend (useful for changing apiserver port)
                                format: int32
                                type: integer
                              name:
                                description: Name is the name of the network to be
                                  used.
                                type: string
                              subnets:
                                description: Subnets configuration.
                                items:
                                  description: SubnetSpec configures an GCP Subnet.
                                  properties:
                                    cidrBlock:
                                      description: CidrBlock is the range of internal
                                        addresses that are owned by this subnetwork.
                                        Provide this property when you create the
                                        subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16.
                                        Ranges must be unique and non-overlapping
                                        within a network. Only IPv4 is supported.
                                        This field can be set only at resource creation
                                        time.
                                      type: string
                                    description:
                                      description: Description is an optional description
                                        associated with the resource.
                                      type: string
                                    enableFlowLogs:
                                      description: 'EnableFlowLogs: Whether to enable
                                        flow logging for this subnetwork. If this
                                        field is not explicitly set, it will not appear
                                        in get listings. If not set the default behavior
                                        is to disable flow logging.'
                                      type: boolean
                                    name:
                                      description: Name defines a unique identifier
                                        to reference this resource.
                                      type: string
                                    privateGoogleAccess:
                                      description: PrivateGoogleAccess defines whether
                                        VMs in this subnet can access Google services
                                        without assigning external IP addresses
                                      type: boolean
                                    purpose:
                                      default: PRIVATE_RFC_1918
                                      description: "Purpose: The purpose of the resource.
                                        If unspecified, the purpose defaults to PRIVATE_RFC_1918.
                                        The enableFlowLogs field isn't supported with
                                        the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
                                        \n Possible values: \"INTERNAL_HTTPS_LOAD_BALANCER\"
                                        - Subnet reserved for Internal HTTP(S) Load
                                        Balancing. \"PRIVATE\" - Regular user created
                                        or automatically created subnet. \"PRIVATE_RFC_1918\"
                                        - Regular user created or automatically created
                                        subnet. \"PRIVATE_SERVICE_CONNECT\" - Subnetworks
                                        created for Private Service Connect in the
                                        producer network. \"REGIONAL_MANAGED_PROXY\"
                                        - Subnetwork used for Regional Internal/External
                                        HTTP(S) Load Balancing."
                                      enum:
                                      - INTERNAL_HTTPS_LOAD_BALANCER
                                      - PRIVATE_RFC_1918
                                      - PRIVATE
                                      - PRIVATE_SERVICE_CONNECT
                                      - REGIONAL_MANAGED_PROXY
                                      type: string
                                    region:
                                      description: Region is the name of the region
                                        where the Subnetwork resides.
                                      type: string
                                    secondaryCidrBlocks:
                                      additionalProperties:
                                        type: string
                                      description: SecondaryCidrBlocks defines secondary
                                        CIDR ranges, from which secondary IP ranges
                                        of a VM may be allocated
                                      type: object
                                  type: object
                                type: array
                            type: object
                          project:
                            description: Project is the name of the project to deploy
                              the cluster to.
                            type: string
                          region:
                            description: The GCP Region the cluster lives in.
                            type: string
                        required:
                        - project
                        - region
                        type: object
                      version:
                        type: string
                    required:
                    - controlPlane
                    - credentialsRef
                    - machinePool
                    - managedCluster
                    type: object
                type: object
              clusterAPI:
                properties:
                  components:
                    properties:
                      bootstrap:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      controlPlane:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      core:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      operator:
                        properties:
                          kubeRBACProxyImage:
                            type: string
                          managerImage:
                            type: string
                        required:
                        - kubeRBACProxyImage
                        - managerImage
                        type: object
                    required:
                    - operator
                    type: object
                  version:
                    type: string
                required:
                - components
                - version
                type: object
              clusterName:
                type: string
              clusterNetwork:
                description: ClusterNetwork specifies the different networking parameters
                  for a cluster.
                properties:
                  apiServerPort:
                    description: APIServerPort specifies the port the API Server should
                      bind to. Defaults to 6443.
                    format: int32
                    type: integer
                  pods:
                    description: The network ranges from which Pod networks are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: Domain name for services.
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                type: object
              gitHubSecretRef:
                description: SecretKeySelector selects a key of a Secret.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              kubernetesVersion:
                type: string
              skipClusterCreation:
                default: false
                type: boolean
            required:
            - cloudSpec
            - clusterAPI
            - clusterName
            - clusterNetwork
            - gitHubSecretRef
            - kubernetesVersion
            type: object
          status:
            properties:
              capiClusterStatus:
                properties:
                  controlPlaneReady:
                    description: ControlPlaneReady defines if the control plane is
                      ready.
                    type: boolean
                  failureMessage:
                    description: FailureMessage indicates that there is a fatal problem
                      reconciling the state, and will be set to a descriptive error
                      message.
                    type: string
                  failureReason:
                    description: FailureReason indicates that there is a fatal problem
                      reconciling the state, and will be set to a token value suitable
                      for programmatic interpretation.
                    type: string
                  infrastructureReady:
                    description: InfrastructureReady is the state of the infrastructure
                      provider.
                    type: boolean
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              capiOperatorComponentsStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              capiOperatorStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              message:
                description: Human readable message indicating details about last
                  transition.
                type: string
              phase:
                description: Phase is a description of the current status, summarizing
                  the various conditions. This field is for informational purpose
                  only and no logic should be tied to the phase.
                enum:
                - Started
                - Creating
                - Running
                - Failed
                - Error
                type: string
              providerStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
