---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: bootstraps.bootstrap.plural.sh
spec:
  group: bootstrap.plural.sh
  names:
    kind: Bootstrap
    listKind: BootstrapList
    plural: bootstraps
    singular: bootstrap
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Application ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              cloudSpec:
                properties:
                  aws:
                    properties:
                      accessKeyIdRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      addons:
                        items:
                          description: Addon represents a EKS addon.
                          properties:
                            name:
                              description: Name is the name of the addon
                              minLength: 2
                              type: string
                            serviceAccountRoleARN:
                              description: ServiceAccountRoleArn is the ARN of an
                                IAM role to bind to the addons service account
                              type: string
                            version:
                              description: Version is the version of the addon to
                                use
                              type: string
                          required:
                          - name
                          - version
                          type: object
                        type: array
                      fetchConfigUrl:
                        type: string
                      instanceType:
                        type: string
                      machinePoolReplicas:
                        format: int32
                        type: integer
                      region:
                        type: string
                      secretAccessKeyRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      serviceAccounts:
                        description: ServiceAccounts specifies service accounts
                        items:
                          properties:
                            attachPolicy:
                              description: AttachPolicy holds a policy document to
                                attach to this service account
                              type: string
                            attachPolicyARNs:
                              description: list of ARNs of the IAM policies to attach
                              items:
                                type: string
                              type: array
                            attachRoleARN:
                              description: ARN of the role to attach to the service
                                account
                              type: string
                            metadata:
                              description: ClusterIAMMeta holds information we can
                                use to create ObjectMeta for service accounts
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                            permissionsBoundary:
                              description: ARN of the permissions boundary to associate
                                with the service account
                              type: string
                            roleName:
                              description: Specific role name instead of the Cloudformation-generated
                                role name
                              type: string
                            roleOnly:
                              description: Specify if only the IAM Service Account
                                role should be created without creating/annotating
                                the service account
                              type: boolean
                            tags:
                              additionalProperties:
                                type: string
                              description: AWS tags for the service account
                              type: object
                            wellKnownPolicies:
                              description: WellKnownPolicies for attaching common
                                IAM policies
                              properties:
                                autoScaler:
                                  description: AutoScaler adds policies for cluster-autoscaler.
                                    See [autoscaler AWS docs](https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html).
                                  type: boolean
                                awsLoadBalancerController:
                                  description: AWSLoadBalancerController adds policies
                                    for using the aws-load-balancer-controller. See
                                    [Load Balancer docs](https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html).
                                  type: boolean
                                certManager:
                                  description: CertManager adds cert-manager policies.
                                    See [cert-manager docs](https://cert-manager.io/docs/configuration/acme/dns01/route53).
                                  type: boolean
                                ebsCSIController:
                                  description: EBSCSIController adds policies for
                                    using the ebs-csi-controller. See [aws-ebs-csi-driver
                                    docs](https://github.com/kubernetes-sigs/aws-ebs-csi-driver#set-up-driver-permission).
                                  type: boolean
                                efsCSIController:
                                  description: EFSCSIController adds policies for
                                    using the efs-csi-controller. See [aws-efs-csi-driver
                                    docs](https://aws.amazon.com/blogs/containers/introducing-efs-csi-dynamic-provisioning).
                                  type: boolean
                                externalDNS:
                                  description: ExternalDNS adds external-dns policies
                                    for Amazon Route 53. See [external-dns docs](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md).
                                  type: boolean
                                imageBuilder:
                                  description: ImageBuilder allows for full ECR (Elastic
                                    Container Registry) access.
                                  type: boolean
                              type: object
                          type: object
                        type: array
                      sessionTokenRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      version:
                        type: string
                    required:
                    - accessKeyIdRef
                    - instanceType
                    - machinePoolReplicas
                    - region
                    - secretAccessKeyRef
                    - sessionTokenRef
                    type: object
                  gcp:
                    properties:
                      controlPlane:
                        description: GCPManagedControlPlaneSpec defines the desired
                          state of GCPManagedControlPlane.
                        properties:
                          clusterName:
                            description: ClusterName allows you to specify the name
                              of the GKE cluster. If you don't specify a name then
                              a default name will be created based on the namespace
                              and name of the managed control plane.
                            type: string
                          controlPlaneVersion:
                            description: ControlPlaneVersion represents the control
                              plane version of the GKE cluster. If not specified,
                              the default version currently supported by GKE will
                              be used.
                            type: string
                          enableAutopilot:
                            description: EnableAutopilot indicates whether to enable
                              autopilot for this GKE cluster.
                            type: boolean
                          endpoint:
                            description: Endpoint represents the endpoint used to
                              communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                          location:
                            description: Location represents the location (region
                              or zone) in which the GKE cluster will be created.
                            type: string
                          project:
                            description: Project is the name of the project to deploy
                              the cluster to.
                            type: string
                          releaseChannel:
                            description: ReleaseChannel represents the release channel
                              of the GKE cluster.
                            enum:
                            - rapid
                            - regular
                            - stable
                            type: string
                        required:
                        - enableAutopilot
                        - location
                        - project
                        type: object
                      credentialsRef:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      fetchConfigUrl:
                        type: string
                      machinePool:
                        properties:
                          replicas:
                            format: int32
                            type: integer
                        required:
                        - replicas
                        type: object
                      managedCluster:
                        description: GCPManagedClusterSpec defines the desired state
                          of GCPManagedCluster.
                        properties:
                          additionalLabels:
                            additionalProperties:
                              type: string
                            description: AdditionalLabels is an optional set of tags
                              to add to GCP resources managed by the GCP provider,
                              in addition to the ones added by default.
                            type: object
                          controlPlaneEndpoint:
                            description: ControlPlaneEndpoint represents the endpoint
                              used to communicate with the control plane.
                            properties:
                              host:
                                description: The hostname on which the API server
                                  is serving.
                                type: string
                              port:
                                description: The port on which the API server is serving.
                                format: int32
                                type: integer
                            required:
                            - host
                            - port
                            type: object
                          credentialsRef:
                            description: CredentialsRef is a reference to a Secret
                              that contains the credentials to use for provisioning
                              this cluster. If not supplied then the credentials of
                              the controller will be used.
                            properties:
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          network:
                            description: NetworkSpec encapsulates all things related
                              to the GCP network.
                            properties:
                              autoCreateSubnetworks:
                                description: "AutoCreateSubnetworks: When set to true,
                                  the VPC network is created in \"auto\" mode. When
                                  set to false, the VPC network is created in \"custom\"
                                  mode. \n An auto mode VPC network starts with one
                                  subnet per region. Each subnet has a predetermined
                                  range as described in Auto mode VPC network IP ranges.
                                  \n Defaults to true."
                                type: boolean
                              loadBalancerBackendPort:
                                description: Allow for configuration of load balancer
                                  backend (useful for changing apiserver port)
                                format: int32
                                type: integer
                              name:
                                description: Name is the name of the network to be
                                  used.
                                type: string
                              subnets:
                                description: Subnets configuration.
                                items:
                                  description: SubnetSpec configures an GCP Subnet.
                                  properties:
                                    cidrBlock:
                                      description: CidrBlock is the range of internal
                                        addresses that are owned by this subnetwork.
                                        Provide this property when you create the
                                        subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16.
                                        Ranges must be unique and non-overlapping
                                        within a network. Only IPv4 is supported.
                                        This field can be set only at resource creation
                                        time.
                                      type: string
                                    description:
                                      description: Description is an optional description
                                        associated with the resource.
                                      type: string
                                    enableFlowLogs:
                                      description: 'EnableFlowLogs: Whether to enable
                                        flow logging for this subnetwork. If this
                                        field is not explicitly set, it will not appear
                                        in get listings. If not set the default behavior
                                        is to disable flow logging.'
                                      type: boolean
                                    name:
                                      description: Name defines a unique identifier
                                        to reference this resource.
                                      type: string
                                    privateGoogleAccess:
                                      description: PrivateGoogleAccess defines whether
                                        VMs in this subnet can access Google services
                                        without assigning external IP addresses
                                      type: boolean
                                    purpose:
                                      default: PRIVATE_RFC_1918
                                      description: "Purpose: The purpose of the resource.
                                        If unspecified, the purpose defaults to PRIVATE_RFC_1918.
                                        The enableFlowLogs field isn't supported with
                                        the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
                                        \n Possible values: \"INTERNAL_HTTPS_LOAD_BALANCER\"
                                        - Subnet reserved for Internal HTTP(S) Load
                                        Balancing. \"PRIVATE\" - Regular user created
                                        or automatically created subnet. \"PRIVATE_RFC_1918\"
                                        - Regular user created or automatically created
                                        subnet. \"PRIVATE_SERVICE_CONNECT\" - Subnetworks
                                        created for Private Service Connect in the
                                        producer network. \"REGIONAL_MANAGED_PROXY\"
                                        - Subnetwork used for Regional Internal/External
                                        HTTP(S) Load Balancing."
                                      enum:
                                      - INTERNAL_HTTPS_LOAD_BALANCER
                                      - PRIVATE_RFC_1918
                                      - PRIVATE
                                      - PRIVATE_SERVICE_CONNECT
                                      - REGIONAL_MANAGED_PROXY
                                      type: string
                                    region:
                                      description: Region is the name of the region
                                        where the Subnetwork resides.
                                      type: string
                                    secondaryCidrBlocks:
                                      additionalProperties:
                                        type: string
                                      description: SecondaryCidrBlocks defines secondary
                                        CIDR ranges, from which secondary IP ranges
                                        of a VM may be allocated
                                      type: object
                                  type: object
                                type: array
                            type: object
                          project:
                            description: Project is the name of the project to deploy
                              the cluster to.
                            type: string
                          region:
                            description: The GCP Region the cluster lives in.
                            type: string
                        required:
                        - project
                        - region
                        type: object
                      version:
                        type: string
                    required:
                    - controlPlane
                    - credentialsRef
                    - machinePool
                    - managedCluster
                    type: object
                type: object
              clusterAPI:
                properties:
                  components:
                    properties:
                      bootstrap:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      controlPlane:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      core:
                        properties:
                          fetchConfigUrl:
                            type: string
                          version:
                            type: string
                        type: object
                      operator:
                        properties:
                          kubeRBACProxyImage:
                            type: string
                          managerImage:
                            type: string
                        required:
                        - kubeRBACProxyImage
                        - managerImage
                        type: object
                    required:
                    - operator
                    type: object
                  version:
                    type: string
                required:
                - components
                - version
                type: object
              clusterName:
                type: string
              clusterNetwork:
                description: ClusterNetwork specifies the different networking parameters
                  for a cluster.
                properties:
                  apiServerPort:
                    description: APIServerPort specifies the port the API Server should
                      bind to. Defaults to 6443.
                    format: int32
                    type: integer
                  pods:
                    description: The network ranges from which Pod networks are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: Domain name for services.
                    type: string
                  services:
                    description: The network ranges from which service VIPs are allocated.
                    properties:
                      cidrBlocks:
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                type: object
              kubernetesVersion:
                type: string
            required:
            - cloudSpec
            - clusterAPI
            - clusterName
            - clusterNetwork
            - kubernetesVersion
            type: object
          status:
            properties:
              capiClusterStatus:
                properties:
                  controlPlaneReady:
                    description: ControlPlaneReady defines if the control plane is
                      ready.
                    type: boolean
                  failureMessage:
                    description: FailureMessage indicates that there is a fatal problem
                      reconciling the state, and will be set to a descriptive error
                      message.
                    type: string
                  failureReason:
                    description: FailureReason indicates that there is a fatal problem
                      reconciling the state, and will be set to a token value suitable
                      for programmatic interpretation.
                    type: string
                  infrastructureReady:
                    description: InfrastructureReady is the state of the infrastructure
                      provider.
                    type: boolean
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              capiOperatorComponentsStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              capiOperatorStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              message:
                description: Human readable message indicating details about last
                  transition.
                type: string
              phase:
                description: Phase is a description of the current status, summarizing
                  the various conditions. This field is for informational purpose
                  only and no logic should be tied to the phase.
                enum:
                - Started
                - Creating
                - Running
                - Failed
                - Error
                type: string
              providerStatus:
                properties:
                  message:
                    description: Human readable message indicating details about last
                      transition.
                    type: string
                  phase:
                    description: Phase is a description of the current status, summarizing
                      the various conditions. This field is for informational purpose
                      only and no logic should be tied to the phase.
                    enum:
                    - Started
                    - Creating
                    - Running
                    - Failed
                    - Error
                    type: string
                  ready:
                    description: Ready is true when the provider resource is ready.
                    type: boolean
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
